---
import { IconCode, IconDemo } from '../icons/icons'

interface Props {
  title_url?: string
  title?: string
  description?: string
  link_code?: string
  link_demo?: string
  icons?: string
  image?: string
  image_alt?: string
}

const {
  title_url,
  title,
  description,
  link_code,
  link_demo,
  icons,
  image,
  image_alt
} = Astro.props
---

<article class='projects__gallery-item'>
  <img src={image} alt={image_alt} class='gallery__img' loading='lazy' />
  <div class='gallery__item-info'>
    <h4 class='item__title'>
      <a href={title_url}
        >{title}
        <svg
          class='item__title-icon'
          viewBox='0 0 18 18'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            opacity='0.5'
            d='M5.67514 15.6194L5.32158 15.2659L16.097 4.49043L16.4506 4.84399L5.67514 15.6194Z'
            stroke='currentColor'
            stroke-width='1.5'
            stroke-linecap='round'
            stroke-linejoin='round'></path>
          <path
            d='M16.5641 12.8623L16.6274 4.31369L8.0788 4.37701'
            stroke='currentColor'
            stroke-width='2'
            stroke-linecap='round'
            stroke-linejoin='round'></path>
        </svg></a
      >
    </h4>
    <p class='item__description'>
      {description}
    </p>
    <footer class='item__footer'>
      <div class='footer__links'>
        <a href={link_code} target='_blank' rel='noopener noreferrer'>
          <IconCode /> Code</a
        >
        {
          link_demo && (
            <a href={link_demo} target='_blank' rel='noopener noreferrer'>
              <IconDemo /> Demo
            </a>
          )
        }
      </div>
      <p class='footer__icons'>{icons}</p>
    </footer>
  </div>
</article>

<script>
  const $galleryInfo = document.querySelectorAll(
    '.gallery__item-info'
  ) as NodeListOf<HTMLElement>
  const isMobile = window.matchMedia('(max-width: 768px)')

  isMobile.addEventListener('change', e => {
    if (e.matches) {
      $galleryInfo.forEach(item => {
        item.style.opacity = '1'
      })
    } else {
      $galleryInfo.forEach(item => {
        item.style.opacity = '0'
      })
    }
  })
</script>

<style is:global>
  .projects__gallery-item {
    position: relative;
  }

  .gallery__img {
    border-radius: var(--border-radius);
    margin-bottom: 20px;
    box-shadow: var(--shadow-elevation-low);
  }

  .gallery__item-info {
    width: 100%;
    height: calc(100% - 24px);
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: 1.5rem;
    border-radius: var(--border-radius);
    background: linear-gradient(
      180deg,
      var(--black-transparent-02),
      var(--black-transparent-08)
    );
    transition: all 0.3s ease-in-out;
    overflow: hidden;
    opacity: 0;
  }

  .gallery__item-info:hover {
    opacity: 1;
    box-shadow: var(--shadow-elevation-medium);
  }

  .item__title {
    font-size: var(--step-1);
    font-weight: 700;
  }

  .item__title a {
    color: var(--light-blue);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.3rem;
    transition: 0.3s ease-in-out;
  }

  .item__title a:hover {
    text-decoration: underline;
    transform: translateY(-2px) translateX(2px);
  }

  .item__title-icon {
    width: 1.8rem;
    height: 1.8rem;
  }

  .item__description {
    font-size: var(--step-0);
    font-weight: 400;
    line-height: 1.2;
    color: var(--white);
    text-overflow: ellipsis;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .item__footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
    padding: 0;
  }

  .footer__links {
    display: flex;
    gap: 1rem;
  }

  .footer__links a {
    font-size: var(--step--1);
    font-weight: 400;
    color: var(--white);
    text-decoration: none;
    transition: 0.3s ease-in-out;

    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .footer__links a:hover {
    color: var(--light-blue);
    text-decoration: underline;
  }

  .footer__links a svg {
    color: var(--light-blue);
  }

  .footer__icons {
    font-size: var(--step-0);
    font-weight: 400;
    color: var(--white);
  }
</style>
